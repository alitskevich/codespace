<component id="Page.Irregular">
  <IndexedDbQuery Ref="query" db="<-db" store="irregular" index="level" value="{level=='all'?'':level}*" />

  <Connector data="<- localStorage.irregularVerbsMode" change="-> quizMode = it ?? false" />
  <Connector data="<- localStorage.irregularVerbsLevel" change="-> level = it ?? 'all'" />
  <Connector data="<- localStorage.language" change="-> language = it ?? 'en'" />

  <Connector data="<-query.data" change="-> data" />

  <div class="fixed inset-0 pt-20">
    <Container class="flex flex-col items-stretch gap-4 h-full">
      <div class=" flex-auto flex flex-col min-h-0 md:m-4">
        <IrregularVerbTable data="{data}" language="{language}"
          columns="{quizMode ? R.columns.irregularQuiz : R.columns.irregular}" />
      </div>
    </Container>
  </div>

  <Header>
    <TopListSelector data="{R.enums.levels4}" change="-> localStorage.irregularVerbsLevel = it.value" value="{level}" />

    <Btn title="{quizMode ? R.strings.stop : R.strings.quiz} ({data|calcIrregularVerbQuizProgress['percent']}%)"
      class="{quizMode ? '!text-white !bg-red-700' : ''}" action="-> localStorage.irregularVerbsMode = !quizMode" />
    <Dropdown options="{R.enums.languages2}" change="-> localStorage.language = it.value" value="{language}" />

  </Header>
</component>

<component id="IrregularVerbTable">
  <AsyncLoader isLoading="{data|not}" title="Wait..." subtitle="ğŸš€  Loading data" error="<- db.error"
    onError="-> db.downstream()">
    <Fragment If="!data.length">
      <Stub title="No data" />
      <Else>
        <Table class="" noHeader="true" groupCaptionType="IrregularVerbTableGroupCaption"
          data="{data| map: R.functions.adaptIrregularVerbItem : language| arraySortBy:'name'| arrayGroupBy:'id'}"
          columns="{columns}" cellChange="-> db.upsertLocally()" sortBy="{sortBy}">
        </Table>
      </Else>
    </Fragment>
  </AsyncLoader>
</component>

<component id="IrregularVerb">
  <div class="relative inline-block cursor-pointer" click="-> out = value | speak">
    <span data="{data}" class="border-dotted border hover:border-gray-500 p-1 m-1
      text-nowrap leading-8 rounded-md  
      {correct ? 'text-white bg-green-800' :'bg-neutral-200 text-black'}">
      <span>{value}</span>
    </span>
    <!-- <Tooltip data="{data}" If="expanded" close="-> expanded=false" /> -->
  </div>
</component>

<component id="QuizOptionsSelector">
  <div class="inline-block">
    <div class="flex flex-no-wrap items-center gap-0      
    divide-x divide-gray-600  
    cursor-pointer" role="group">
      <label Each="option of options" class="px-1
    first:rounded-l-lg last:rounded-r-lg  
    {option.id == value ? 'bg-red-600 text-white' : 'bg-neutral-200 text-gray-700' } 
    " data-value="{option.id}" click="{change}">
        <span class="text-sm">{option.name}</span>
      </label>
    </div>
  </div>
</component>

<component id="IrregularVerbQuiz">
  <Connector data="{_|assignKeyValue:mode:newValue}" data-id="{data.id}" data-store="irregular" change="{change}"
    trigger="{newValue}" />
  <Connector data="{data.f1},{data.f2},{data.f3},{data.f1}en,{data.f1}ed"
    change="-> options| split:','| arrayShuffle | arrayDedup | arrayJoin:','" />
  <Fragment If="answer == value">
    <Connector data="{newValue}" trigger="{newValue}" change="-> outloud | speak" />
    <IrregularVerb value="{value}" data="{data}" correct="true" />
    <Else>
      <audio src="{R.assets.bruh}?code={newValue}" autoplay once If="newValue" />
      <QuizOptionsSelector options="{options}" change="-> newValue=it.value" value="{answer}" />
    </Else>
  </Fragment>
</component>

<component id="IrregularVerbTableGroupCaption">
  <div dir="{data.language != 'ar' ? 'ltr' : 'rtl'}" class="font-bold uppercase">{data.items.0.name}</div>
</component>

<component id="TableCell.IrregularVerbQuiz">
  <div class="inline-block p-2 grid grid-cols-1 gap-2 auto-cols-auto" style="grid-template-columns: 1fr;">
    <div If="data.f1 != data.a1">
      <span>{data.s1|strHead:data.f1}</span>
      <IrregularVerbQuiz value="{data.f1}" answer="{data.a1}" data="{data}" mode="a1" change="{change}" />
      <span>{data.s1|strTail:data.f1}</span>
    </div>
    <div If="data.f2 != data.a2">
      <span>{data.s2|strHead:data.f2}</span>
      <IrregularVerbQuiz value="{data.f2}" answer="{data.a2}" data="{data}" mode="a2" change="{change}" />
      <span>{data.s2|strTail:data.f2}</span>
    </div>
    <div If="data.f3 != data.a3">
      <span>{data.s3|strHead:data.f3}</span>
      <IrregularVerbQuiz value="{data.f3}" answer="{data.a3}" data="{data}" mode="a3" change="{change}" />
      <span>{data.s3|strTail:data.f3}</span>
    </div>
  </div>
</component>

<component id="TableCell.IrregularVerbExample">

  <div class="inline-block p-2 grid grid-cols-1 gap-2 auto-cols-auto" style="grid-template-columns: 1fr;">
    <div>
      <span>{data.s1|strHead:data.f1}</span>
      <IrregularVerb value="{data.f1}" data="{data}" correct="{data.f1 == data.a1}" />
      <span>{data.s1|strTail:data.f1}</span>
    </div>
    <div>
      <span>{data.s2|strHead:data.f2}</span>
      <IrregularVerb value="{data.f2}" data="{data}" correct="{data.f2 == data.a2}" />
      <span>{data.s2|strTail:data.f2}</span>
    </div>
    <div>
      <span>{data.s3|strHead:data.f3}</span>
      <IrregularVerb value="{data.f3}" data="{data}" correct="{data.f3 == data.a3}" />
      <span>{data.s3|strTail:data.f3}</span>
    </div>
  </div>
</component>