<component id="Word2">
  <div class="relative inline-block" click="-> expanded=!expanded">
    <span data="{data}"
      class="border-dotted border hover:border-gray-500 p-1 m-1
          leading-8 rounded-md bg-neutral-200 
          cursor-pointer
          {data.type == 'word' ? 'word' :''} word-{data.acquired} text-{data.stemm.acquired ?? data.acquired|toColorText}-700">{value}
    </span>
    <Tooltip data="{data}" If="expanded" close="-> expanded=false" />
  </div>
</component>
<component id="Word">
  <div class="relative inline-block mb-2" click="-> expanded=true">
    <span data="{item}" class="border-dotted border hover:border-gray-500 p-1 
            leading-8 rounded-md bg-neutral-200
            cursor-pointer
            {item.type == 'word' ? 'word' :''} word-{item.acquired} text-{item.acquired|toColorText}-700">{item.name}
    </span>
    <Tooltip data="{item}" If="expanded" close="-> expanded=false" />
  </div>
</component>

<component id="MarkedText">
  <div contentEditable="-> editedText=it.text"
    class="text-black bg-slate-200 dark:bg-slate-300 w-full rounded-lg p-2 {class}">
    <Dynamic As="Token.{item.type}" item="{item}" Each="item of data" />
  </div>
</component>

<component id="Token">
  <span class="text-md text-gray-700 m-[0.125rem]">{item.name} </span>
</component>

<component id="Token.word">
  <div class="relative inline-block mb-1" click="-> expanded=!expanded">
    <span data="{item}"
      class="border border-transparent hover:border-gray-500 p-1 -m-1 
          leading-8 rounded-md 
          cursor-pointer
          {item.type == 'word' ? 'word' :''} word-{item.acquired} text-{item.stemm.acquired ?? item.acquired|toColorText}-700">{item.name}
    </span>
    <Tooltip data="{item}" If="expanded" close="-> expanded=false" />
  </div>
</component>

<component id="Tooltip">
  <div class=" bg-slate-600 p-2 mt-12 max-w-[120px] rounded-lg" style="width: max-content;margin-top:2rem;"
    dropdown="{close}">
    <div class="flex items-center gap-2 justify-between ">
      <div class="w-6 h-6 bg-{ack.id|toColor}-500 rounded-full z-10" Each="ack of R.enums.acquired"
        data-id="{data.stemm.id ?? data.id}" data-acquired="{ack.id}" click="-> words.updateStemmAcquitance()">
      </div>
    </div>
  </div>
</component>