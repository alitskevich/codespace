<components>

  <component id="Page.Ctest">
    <StoredData name="state" data="{state}" defaults="{R.defaultState}" action="-> state" />

    <StoredValue Ref="storeId" defaultValue="idioms" />
    <IndexedDbQuery Ref="query" db="<-db.instance" store="<- storeId.value" value="*" />
    <CTestService Ref="ctest" state="{state}" data="<-query.data" />
    <Connector data="<-ctest.info" change="->" />
    <div class="fixed inset-0 top-20">
      <Container class="flex flex-col dark:text-white h-full">
        <div class=" flex flex-row justify-between items-center py-4 px-2">
          <div class="h-8 w-28 flex flex-row gap-2 items-center">
            <Fragment If="step > -1">
              <img class="icon" src="{R.assets.back}" click="-> ctest.onBack()" />
              <div class="progess-caption">{step|plus:1}</div>
              <b>{current.symbol ?? 'âšª'}</b>
              <img class="icon rotate-180" src="{R.assets.back}" click="-> ctest.onNext()" />
            </Fragment>
          </div>
          <div class="h-8 flex flex-row items-center gap-4 p-2">
            <Btn title="{autoplay ? 'Stop' : 'Auto'}" class="{autoplay ? '!bg-red-700 !text-white' : ''}"
              action="-> ctest.onAutoPlay()" If="step > -1" />
            <Btn title="Done" class="!bg-red-700 !text-white" action="-> ctest.onStop()" If="step > -1 && !autoplay" />
            <Btn title="Start" class="!bg-green-700 !text-white" action="-> ctest.onRestart()" If="step == -1" />
          </div>
        </div>
        <div class="flex flex-col flex-1 min-h-0 px-2">
          <StepsList step="{step}" showHint="{showHint}" item="<-ctest.current" If="step > -1" />
          <CTestCongrats If="step == -1" />
        </div>
      </Container>
    </div>
    <Header />
  </component>

  <component id="StepsList">
    <Progress step="{step}" data="<-ctest.progress" />

    <div class="flex flex-col flex-1 min-h-0 op" style="position: relative;">
      <QuizItem (...)="{item}" />
    </div>
  </component>

  <component id="QuizItem">
    <div class="p-2 flex flex-col flex-1 min-h-0">
      <h5 class="hidden text-bold mt-2 p-4 bg-emerald-800 rounded-md" id="explanation" If="explanation">
        <b>ðŸ’¡</b><span class="ml-2">{explanation}</span>
      </h5>
      <h5
        class="flex flex-col text-4xl md:text-6xl p-4 m-4 items-center gap-4 justify-center text-center flex-1 min-h-0 overflow-y-auto"
        innerHtml="{body|illustrateSentence ?? ''}">
      </h5>
      <h5 class="text-2xl p-2 m-2 text-center min-h-0 " innerHtml="({body ?? '...'})">
      </h5>
      <div class="mt-2 flex flex-col place-content-center items-stretch">
        <Input id="{id}" value="{value}" answered="{answered}" correct="{correct}" options="{options}"
          isCorrect="{isCorrect}" isWrong="{!isCorrect && answered}" hiddenAnswer="{options.length == 1 && !answered}"
          changed="-> ctest.onAnswer()" />
      </div>
    </div>
  </component>

  <component id="Input">
    <div class="flex flex-row gap-3 flex-wrap">
      <div class="flex flex-row flex-1 min-w-fit cursor-pointer" Each="option of options">
        <div class="flex flex-row flex-1 p-1 md:p-2 border-2 
          text-center rounded-md bg-slate-200 dark:bg-slate-600 border-slate-300
          {value == option.id ? '!border-amber-500 !text-white'} 
          {correct == option.id && answered ? '!bg-emerald-700 !text-white'} 
          {value == option.id && isWrong && answered ? '!bg-red-600 !text-white'} 
          {answered ? 'disabled'}" data-key="{id}" data-value="{option.id}" click="{changed}">
          <p class="flex-1" title="{option.id|plus:1}">{hiddenAnswer ? '...' : option.name}</p>
        </div>
      </div>
    </div>
  </component>

  <component id="ResultsReport">
    <div class="flex flex-col gap-2 max-w-fit">
      <div class="flex flex-row flex-1 min-w-fit justify-center" Each="option of data">
        <div class="flex flex-row flex-1 p-1 md:p-2
              text-center
              " data-key="{id}" data-value="{option.id}" click="{changed}">
          <p class="flex-1" title="{option.id|plus:1}"> <b class="capitalize">{option.id} </b><span>:
              {option.name}</span></p>
        </div>
      </div>
    </div>
  </component>

  <component id="CTestCongrats">
    <!-- <TgWebAppService Ref="tg" buttonText="{R.strings.congratButtonTitle}" data="<-ctest.stat"
      submitQueryUrl="{R.submitQueryUrl}" /> -->

    <div class="flex flex-col place-content-center flex-1">
      <div class="flex flex-col place-content-center flex-1 items-center place-content-center p-4">
        <img src="{R.assets.thumbsup}" class="h-8 w-8" />
        <h3 class="my-2 text-center">{R.strings.congratTitle}</h3>
        <!-- <ResultsReport data="<-ctest.report" /> -->
      </div>
      <div class="m-4 p-2 flex flex-row place-content-center" If="<-tg.isMocked">
        <Btn title="{R.strings.congratButtonTitle}" mode="primary" large action="-> tg.onSubmit()" busy="<-tg.busy" />
      </div>
    </div>
  </component>

  <component id="Progress">
    <div class="h-4 flex flex-row justify-between  items-center gap-0 md:gap-2">
      <div class=" flex-1
       bg-{item.color}-{item.order == step ? '300' : '600'} 
      {item.order == step ? 'h-3' : 'h-1'}" Each="item of <-ctest.progress" />
    </div>
  </component>

</components>