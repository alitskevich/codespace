<component id="SidebarList">
  <div class="space-y-1 font-medium">
    <div Each="group of data">
      <button type="button"
        class="flex items-center p-2 w-full text-base font-medium text-gray-900 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700"
        toggleClass="hidden in sub; -rotate-180 in caret">
        <Dynamic As="ItemTypeIcon.{group.items.0.type}" />
        <span class="flex-1 ml-3 text-left whitespace-nowrap capitalize">{group.id}</span>
        <svg class="w-6 h-6 transition duration-175" Ref="caret" fill="currentColor" viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg">
          <path fill-rule="evenodd"
            d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
            clip-rule="evenodd"></path>
        </svg>
      </button>
      <div Ref="sub" class="hidden2 py-2 space-y-1">
        <div Each="item of group.items">
          <a href="#{item.id}" class="flex items-center p-2 pl-11
          w-full text-base font-medium text-gray-900
             rounded-lg transition 
             duration-75 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700
             ">{item.id}</a>
        </div>
      </div>
    </div>
  </div>
</component>

<component id="Preview">
  <div class=" bg-slate-800 flex-1 flex flex-row rounded-md border-t-2 border-gray-200 dark:border-gray-700">
    <div class="h-full bg-slate-800 mx-auto"
      style="overflow: auto; width: {viewportSize}px; max-width: {viewportSize}px; border:2px dotted blue;">
      <iframe id="previewFrame" If="item.id"
        src="/preview?projectId={R.projectId}&itemId={item.id}&itemType={item.type}&ping={ping}&darkMode={darkMode}&locale={locale}"
        style="width: 100%; height: 100%;"></iframe>
    </div>
    <div class="flex flex-col z-40 w-64 bg-gray-50 dark:bg-gray-800">
      <Properties data="{item}" properties="<-current.props" change="-> current.props" />
    </div>
  </div>
</component>

<component id="Markup">
  <StoredData name="markupState" defaults="{R.ide.markupDefaultState}" data-markupType="{markupType}" action="->" />

  <div class=" bg-slate-800 flex flex-col rounded-md h-72 border-t-2 border-gray-200 dark:border-gray-700">
    <div
      class=" bg-gray-50 dark:bg-gray-800 h-8 flex flex-col items-center flex-no-wrap justify-end  border-b-[1px] border-gray-200 dark:border-gray-700">
      <MarkupTypeSelector value="{markupType}" on="-> markupType" />
      <div class="w-16">
        <CopyButton data="{body}" If="markupType=='html'" />
        <CopyButton data="{body|xmlParse|reactCodeGen:id}" If="markupType=='react'" />
      </div>
    </div>
    <div class="overflow-y-auto flex-auto min-h-0 min-w-0">
      <JsonView If="markupType=='json'" data="{node}" />

      <pre If="markupType=='react'">
        {body|xmlParse|reactCodeGen:id}
      </pre>
      <MarkupView data="{body|xmlParse}" class="w-full" If="markupType=='html'" />
    </div>
  </div>
</component>

<component id="CopyButton">
  <button type="button" data="{data}" click="-> browser.copyToClipboard()" class="px-2 h-8
     text-gray-500  hover:text-gray-900 hover:bg-gray-100 dark:text-gray-400 dark:hover:text-white
    dark:hover:bg-gray-700">Copy</button>
</component>

<component id="Properties">
  <div class="flex-1 border-l border-l-gray-600 dark:border-l-gray-700">
    <div
      class="px-2 bg-gray-100 dark:bg-gray-700 h-8 flex items-center justify-start  border-b-[1px] border-gray-200 dark:border-gray-700">
      <Fragment If="data.props.length">
        <Then>
          <h5>Properties</h5>
        </Then>
        <Else>
          <h5>No Properties.</h5>
        </Else>
      </Fragment>
    </div>
    <Fragment If="data.props.length">
      <div class="px-2">
        <Forma meta="{data.props}" metaId="{data.id}" data="{properties ?? null}" change="{change}" />
      </div>
    </Fragment>
  </div>
</component>

<component id="App.Project">

  <ToastService Ref="toaster" />

  <BrowserService Ref="browser" title="{R.name ?? 'Project'}" />
  <LocationHashService Ref="hash" />
  <StoredData name="shellState" defaults="{R.ide.defaultState}" data-showHtml="{showHtml}" data-darkMode="{darkMode}"
    data-locale="{locale}" data-viewportSize="{viewportSize}" action="->" />

  <Connector Ref="current" />

  <Connector data="<-hash.data" change="-> itemId" />
  <Connector data="{R.components | find : itemId}" change="-> item" />
  <!-- <SSEventSource url="http://localhost:3003/" action="-> current.fileChanged|now" />; -->

  <Connector data="{item.props | arrayToObject : 'id' : 'defaultValue'}" change="-> current.props" trigger="{item}" />

  <PostMessageReceiver onMessage="-> current.entityReady" eventType="previewReady" />
  <PostMessageSender targetId="previewFrame" eventType="props" on="<-current.entityReady" data="<-current.props" />


  <main class="h-screen w-screen flex flex-col gap-0">
    <Nav>
      <Nav:right>
        <ViewportSizesSelector value="{viewportSize}" on="-> viewportSize=it.value" />
        <DarkModeToggler />
        <LanguageSelector value="{locale}" on="-> locale" />
        <ShowHtmlTrigger value="{showHtml}" on="-> showHtml=!showHtml" />
      </Nav:right>
      <Nav:left>
        <Popover caption="{R.name ?? 'Project'}" position="left-0 top-2" triggerClass="text-xl">
          <ProjectsSelector />
        </Popover>
        <h5 class="mx-2 flex items-center space-x-2" If="item">
          <Dynamic As="ItemTypeIcon.{item.type??'File'}" />
          <span>{item.name ?? item.id}</span>
          <a class="ml-2 text-indigo-600 text-lg font-semibold" href="/editor/{R.projectId}/{item.id}">Edit</a>
        </h5>
      </Nav:left>
    </Nav>
    <div class="flex flex-col flex-no-wrap gap-0 flex-auto min-h-0 min-w-0 items-stretch">
      <aside id="aside" class="flex flex-col gap-0 w-64
                         bg-white border
                          border-gray-200 dark:bg-gray-800 dark:border-blue-700" aria-label="Sidenav">
        <div class="flex-auto min-h-0 min-w-0 overflow-y-auto  py-2 px-2 bg-white dark:bg-gray-800">
          <SidebarList data="{R.componentsTree}" />
        </div>
        <div class="flex flex-col items-center flex-no-wrap p-4 space-x-4 bg-white lg:flex dark:bg-gray-800">
          <a href="#"
            class="inline-flex justify-center p-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
            <Svg.Settings />
          </a>
          <a href="https://dashboard.vercel.app/settings/"
            class="inline-flex justify-center p-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
            <Svg.Gears />
          </a>
        </div>
      </aside>
      <div class="flex flex-col flex-auto min-h-0 min-w-0 my-2 mx-2">
        <Preview item="{item}" ping="<-current.fileChanged" darkMode="{darkMode}" locale="{locale}"
          viewportSize="{viewportSize}" />
        <Markup Props="{item}" If="showHtml" />
      </div>
    </div>
  </main>

  <ToastList />

</component>